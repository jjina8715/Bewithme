
plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id "org.flywaydb.flyway" version "7.2.0" 
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceCompatibility = '11'
targetCompatibility = '11'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
	mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations {
    configurations {
        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	//b/c log4j2 실행 취약점(CVE-2021-44228)
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.15.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.15.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.15.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.15.0'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
	implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.32'
	
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation group: 'com.github.zhanhb', name: 'thymeleaf-layout-dialect', version: '2.4.1'
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE"
	
	runtimeOnly 'mysql:mysql-connector-java:8.0.25'
//	implementation 'org.hibernate:hibernate-hikaricp:5.4.10'
	implementation 'org.flywaydb:flyway-core'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
    annotationProcessor group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
    
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'
    
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
    //querydsl 추가
    
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    implementation group: 'com.querydsl', name: 'querydsl-collections', version: '5.0.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:general'
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	
}

def querydslDir =  "src/main/generated"

querydsl {
	library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslDefault = true
    querydslSourcesDir = querydslDir
}
//에디터 설정
sourceSets {
	main { 
		java {
			srcDirs = ['src/main/java', querydslDir] 
		}
	}
}
//컴파일 클래스 패스에 넣음.
configurations {
    querydsl.extendsFrom compileClasspath
}
//어노테이션 프로세서와 맞물려서 빌드시 생성
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

clean {
    delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성 위치
}
test {
	useJUnitPlatform()
}
